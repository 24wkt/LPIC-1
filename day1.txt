【1】Linuxとオープンソース

[1-1] OSってなんだろう？
~POINT~
・OS(基本ソフトウェア)はハードとアプリケーションを仲介するソフトウェアである。
・代表的なOSには、Windows、macOS、UNIXがある。

コンピュータのソフトウェアは大きく分けて2つになる。
①OS（オペレーション・システム、基本ソフトウェア）
->OSはコンピュータのハードウェアとアプリケーションの間で、ハードウェアをコントロールしたり、アプリケーションが動作する環境を提供したりする役割を持っている。
＝アプリケーションを開発する側から見れば、ハードの違いをOSが吸収してくれるので、ハードウェアを意識することなく、楽に開発が進められる。

②アプリケーション（応用ソフトウェア）
->私たちが普段利用しているWebブラウザ、メールソフト(メーラ)、ワープロ、表計算ソフト、ゲームソフト、音楽プレーヤー、動画編集ソフトなど。


[1-2]Linuxについて知ろう
~POINT~
・Linuxはカーネル部分の名称である。
・LinuxをOSとして使えるようにした配布形態がディストリビューションである。
・ディストリビューションには、Red Hat系とDebian系がある。

■カーネルとディストリビューション
『カーネル』
＝プログラムのプロセス管理、メモリ管理、ファイルシステム管理、ネットワーク管理、デバイス管理などを担当するプログラム。
参考：(https://wa3.i-3-i.info/word15.html)

OSはカーネルだけでは成り立たず、その他のソフトウェアを手と足のように使って初めて機能します。
つまり、カーネルはハードウェア側に一番近いソフトウェアであり、アプリケーションやソフトウェアの代わりにメモリやCPUなどとのやりとりをしてくれる中核部分。

『ディストリビューション』
=Linuxカーネルにライブラリやツール、インストーラが組み込まれて1つの製品として提供されているもの。
　私たちが「Linux OS」として利用しているのは、1つのOS製品として完成された「Linuxディストリビューション」
参考：（https://www.pc-koubou.jp/magazine/18202）

ディストリビューションを構成するソフトウェアは、ほとんどがオープンソースソフトウェア。
そのため、個人でも企業でもLinuxカーネルとオープンソースソフトウェアを組み合わせてディストリビューションを作成することができる。

ディストリビューションの種類は数え切れないほどありますが、大きく分けると以下の3つに分類できる。

・Red Hat系ディストリビューション
・Debian系ディストリビューション
・その他のディストリビューション

■Red Hat系ディストリビューション
Red Hat系ディストリビューションとは、レッドハット社によって開発されていたRed Hat Linuxをベースに開発されたもの。
最初はRed Hat Linuxをカスタマイズした程度のものだったが現在では独自の進化を遂げているものもある。

主なRed Hat系ディストリビューション
・Fedora（フェドーラ）
・Red Hat Enterprise Linux
・CentOS（セントオーセス）

■Debian系ディストリビューション
フリーソフトだけを採用する無償ディストリビューションとしてDebian Projectというコミュニティが開発しているのがDebian GNU/Linux。
Debian GNU/Linuxをベースとして、様々なディストリビューションが作られいる。

主なDebian系ディストリビューション
・Ubuntu（ウブントゥ）
・Linux Mint（リナックス・ミント）
・Raspbian（ラズビアン）

■その他のディストリビューション
Red Hat系にもDebian系にも属さないディストリビューション。その筆頭格はSlackwere。

主なその他のディストリビューション
・Slackwere（スラックウェア）
・openSUSE（オープンスーゼ）

■Linuxの特徴
①UNIXライクなOS
LinuxはUNIXと同等の動作をするようにゼロから作り上げられた独自のOS。そのため「UNIXライクなOS」と呼ばれる。
UNIXで動作するソフトウェアの多くはLinuxでも動作し、UNIXの知識もLinuxで活用できる。

②多彩なディストリビューション
目的によって最適なものを選べる反面、選択肢が多すぎて混乱を招く恐れがある。

③多彩なプラットフォーム
OSが動作するハードウェアをプラットフォームという。Linuxは、PCやサーバはもちろん、小は携帯電話から大はスーパーコンピュータまでとても幅広いハードウェア上で動作する。
また、数多くのアーキテクチャに対応している。（＝色んな構造のプラットフォームに対応できる。）

④無償で利用可能
文字通り、無料。その中でも最も人気があり、サポート体制も充実している。

⑤最適なシステム構造が可能
Linuxはシステムに合わせて細かく機能を調整できる。
貧弱なハードウェアには余計なものをそぎ落とし、組み込み機械向けに最適化したりと、自由度の高いカスタマイズができる。

■Linuxが利用できる領域
Linuxというと「サーバ」と考えられがちですが、Linuxを利用できる領域はたくさんある。
・ネットワークサーバ
・組み込み機器
・パソコン
・大規模システム

[1-3]オープンソースとは？
~POINT~
・オープンソースではソースコードを自由に利用できる。
・オープンソースのライセンスとしてGNU GPLなどがある。
・オープンソースを支えるコミュニティーがある。

ソースコードを公開して自由に開発を進めていくスタイルを「オープンソース」という。
LinuxとWindows、macOSとの大きな違いの1つはオープンソースで開発されているということ。

企業が開発しているソフトウェアを公開してしまうと、誰でも簡単にコピー製品を作り出すことができてしまうため公開されない。
しかし、オープンソースの場合は誰でも簡単にコードを修正したり、機能を追加することができる。

■フリーソフトウェアとオープンソース
元々は「フリーソフトウェア」が現在のオープンソースとして使われていた固有名詞ではあったが、
「自由」よりも「無料」という意味合いが強くなってしまったことから1998年に「オープンソース」という言葉が生まれた。

オープンソースを推進しているOSI(open source initative)ではオープンソースの定義として次の10項目を定めている。

①ソフトウェアを自由に販売したり無料で配布したりできること。
②ソースコードを入手できること。
③ソフトウェアの改良したり派生ソフトウェアを作成したりできること。
④作者のソースコードの完全性を維持すること。
⑤個人やグループを差別しないこと。
⑥利用分野に対して差別しないこと。
⑦再配布するときに追加ライセンスを必要としないこと。
⑧ライセンスは特定の製品に依存しないこと。
⑨一緒に配布される他のソフトウェアを制限しないこと。
⑩技術的に中立であること。

上記の定義に則ったライセンスを採用しているソフトウェアがオープンソースソフトウェアであると言える。
※「ライセンス」
=コンピュータソフトウェアを利用する際に利用者が守るべき約束事をライセンス（＝使用許諾）という。
　ライセンスにはソフトウェアを利用できる人数、利用できる時間、禁止行為などが記載されている。

■代表的なオープンライセンス
・GNU GPL (General Public License)
-> Linux(OS), Samba(ファイル共有サーバ), GCC(コンパイラ)

・BSD License
-> OpenSSH(SSHサーバ), FreeBSD(OS)

・Artistic License
-> Perl(プログラミング言語)

・Apache License
-> Apache HTTP Server(Weサーバー)

これらの中で最も知られているオープンライセンスは「GNU GPL(General Public License)」.
GPLの特徴の1つが「コピーレフト」という概念で、GPLが適用されたソフトウェアのソースコードを修正して再配布する場合、変更した部分のソースコードも提供しなければならない。とされている。
著作権で保護されるのとは対照的である。
そのため、著作権（コピーライト）に引っ掛けてコピーレフトという。